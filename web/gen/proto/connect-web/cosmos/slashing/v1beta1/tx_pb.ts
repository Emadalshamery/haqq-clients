// @generated by protoc-gen-es v1.3.1 with parameter "target=ts"
// @generated from file cosmos/slashing/v1beta1/tx.proto (package cosmos.slashing.v1beta1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * MsgUnjail defines the Msg/Unjail request type
 *
 * @generated from message cosmos.slashing.v1beta1.MsgUnjail
 */
export class MsgUnjail extends Message<MsgUnjail> {
  /**
   * @generated from field: string validator_addr = 1;
   */
  validatorAddr = "";

  constructor(data?: PartialMessage<MsgUnjail>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cosmos.slashing.v1beta1.MsgUnjail";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "validator_addr", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgUnjail {
    return new MsgUnjail().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgUnjail {
    return new MsgUnjail().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgUnjail {
    return new MsgUnjail().fromJsonString(jsonString, options);
  }

  static equals(a: MsgUnjail | PlainMessage<MsgUnjail> | undefined, b: MsgUnjail | PlainMessage<MsgUnjail> | undefined): boolean {
    return proto3.util.equals(MsgUnjail, a, b);
  }
}

/**
 * MsgUnjailResponse defines the Msg/Unjail response type
 *
 * @generated from message cosmos.slashing.v1beta1.MsgUnjailResponse
 */
export class MsgUnjailResponse extends Message<MsgUnjailResponse> {
  constructor(data?: PartialMessage<MsgUnjailResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cosmos.slashing.v1beta1.MsgUnjailResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgUnjailResponse {
    return new MsgUnjailResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgUnjailResponse {
    return new MsgUnjailResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgUnjailResponse {
    return new MsgUnjailResponse().fromJsonString(jsonString, options);
  }

  static equals(a: MsgUnjailResponse | PlainMessage<MsgUnjailResponse> | undefined, b: MsgUnjailResponse | PlainMessage<MsgUnjailResponse> | undefined): boolean {
    return proto3.util.equals(MsgUnjailResponse, a, b);
  }
}

