/*
 * cosmos/app/v1alpha1/module.proto
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 * Generated by: https://openapi-generator.tech
 */

/// CosmosPeriodStakingPeriodV1beta1PeriodParams : Params defines the parameters for the staking module.



#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct CosmosPeriodStakingPeriodV1beta1PeriodParams {
    /// unbonding_time is the time duration of unbonding.
    #[serde(rename = "unbondingTime", skip_serializing_if = "Option::is_none")]
    pub unbonding_time: Option<String>,
    /// max_validators is the maximum number of validators.
    #[serde(rename = "maxValidators", skip_serializing_if = "Option::is_none")]
    pub max_validators: Option<i64>,
    /// max_entries is the max entries for either unbonding delegation or redelegation (per pair/trio).
    #[serde(rename = "maxEntries", skip_serializing_if = "Option::is_none")]
    pub max_entries: Option<i64>,
    /// historical_entries is the number of historical entries to persist.
    #[serde(rename = "historicalEntries", skip_serializing_if = "Option::is_none")]
    pub historical_entries: Option<i64>,
    /// bond_denom defines the bondable coin denomination.
    #[serde(rename = "bondDenom", skip_serializing_if = "Option::is_none")]
    pub bond_denom: Option<String>,
    #[serde(rename = "minCommissionRate", skip_serializing_if = "Option::is_none")]
    pub min_commission_rate: Option<String>,
}

impl CosmosPeriodStakingPeriodV1beta1PeriodParams {
    /// Params defines the parameters for the staking module.
    pub fn new() -> CosmosPeriodStakingPeriodV1beta1PeriodParams {
        CosmosPeriodStakingPeriodV1beta1PeriodParams {
            unbonding_time: None,
            max_validators: None,
            max_entries: None,
            historical_entries: None,
            bond_denom: None,
            min_commission_rate: None,
        }
    }
}


