/*
 * cosmos/app/v1alpha1/module.proto
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 * Generated by: https://openapi-generator.tech
 */

/// CosmosPeriodBankPeriodV1beta1PeriodDenomUnit : DenomUnit represents a struct that describes a given denomination unit of the basic token.



#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct CosmosPeriodBankPeriodV1beta1PeriodDenomUnit {
    /// denom represents the string name of the given denom unit (e.g uatom).
    #[serde(rename = "denom", skip_serializing_if = "Option::is_none")]
    pub denom: Option<String>,
    /// exponent represents power of 10 exponent that one must raise the base_denom to in order to equal the given DenomUnit's denom 1 denom = 10^exponent base_denom (e.g. with a base_denom of uatom, one can create a DenomUnit of 'atom' with exponent = 6, thus: 1 atom = 10^6 uatom).
    #[serde(rename = "exponent", skip_serializing_if = "Option::is_none")]
    pub exponent: Option<i64>,
    #[serde(rename = "aliases", skip_serializing_if = "Option::is_none")]
    pub aliases: Option<Vec<String>>,
}

impl CosmosPeriodBankPeriodV1beta1PeriodDenomUnit {
    /// DenomUnit represents a struct that describes a given denomination unit of the basic token.
    pub fn new() -> CosmosPeriodBankPeriodV1beta1PeriodDenomUnit {
        CosmosPeriodBankPeriodV1beta1PeriodDenomUnit {
            denom: None,
            exponent: None,
            aliases: None,
        }
    }
}


