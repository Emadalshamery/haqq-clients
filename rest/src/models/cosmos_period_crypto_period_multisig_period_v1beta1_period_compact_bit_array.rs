/*
 * cosmos/app/v1alpha1/module.proto
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 * Generated by: https://openapi-generator.tech
 */

/// CosmosPeriodCryptoPeriodMultisigPeriodV1beta1PeriodCompactBitArray : CompactBitArray is an implementation of a space efficient bit array. This is used to ensure that the encoded data takes up a minimal amount of space after proto encoding. This is not thread safe, and is not intended for concurrent usage.



#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct CosmosPeriodCryptoPeriodMultisigPeriodV1beta1PeriodCompactBitArray {
    #[serde(rename = "extraBitsStored", skip_serializing_if = "Option::is_none")]
    pub extra_bits_stored: Option<i64>,
    #[serde(rename = "elems", skip_serializing_if = "Option::is_none")]
    pub elems: Option<String>,
}

impl CosmosPeriodCryptoPeriodMultisigPeriodV1beta1PeriodCompactBitArray {
    /// CompactBitArray is an implementation of a space efficient bit array. This is used to ensure that the encoded data takes up a minimal amount of space after proto encoding. This is not thread safe, and is not intended for concurrent usage.
    pub fn new() -> CosmosPeriodCryptoPeriodMultisigPeriodV1beta1PeriodCompactBitArray {
        CosmosPeriodCryptoPeriodMultisigPeriodV1beta1PeriodCompactBitArray {
            extra_bits_stored: None,
            elems: None,
        }
    }
}


