/*
 * cosmos/app/v1alpha1/module.proto
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 * Generated by: https://openapi-generator.tech
 */

/// CosmosPeriodAppPeriodV1alpha1PeriodConfig : Config represents the configuration for a Cosmos SDK ABCI app. It is intended that all state machine logic including the version of baseapp and tx handlers (and possibly even Tendermint) that an app needs can be described in a config object. For compatibility, the framework should allow a mixture of declarative and imperative app wiring, however, apps that strive for the maximum ease of maintainability should be able to describe their state machine with a config object alone.



#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct CosmosPeriodAppPeriodV1alpha1PeriodConfig {
    /// modules are the module configurations for the app.
    #[serde(rename = "modules", skip_serializing_if = "Option::is_none")]
    pub modules: Option<Vec<crate::models::CosmosPeriodAppPeriodV1alpha1PeriodModuleConfig>>,
}

impl CosmosPeriodAppPeriodV1alpha1PeriodConfig {
    /// Config represents the configuration for a Cosmos SDK ABCI app. It is intended that all state machine logic including the version of baseapp and tx handlers (and possibly even Tendermint) that an app needs can be described in a config object. For compatibility, the framework should allow a mixture of declarative and imperative app wiring, however, apps that strive for the maximum ease of maintainability should be able to describe their state machine with a config object alone.
    pub fn new() -> CosmosPeriodAppPeriodV1alpha1PeriodConfig {
        CosmosPeriodAppPeriodV1alpha1PeriodConfig {
            modules: None,
        }
    }
}


