/*
 * cosmos/app/v1alpha1/module.proto
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 * Generated by: https://openapi-generator.tech
 */

/// EvmosPeriodErc20PeriodV1PeriodTokenPair : TokenPair defines an instance that records a pairing consisting of a native  Cosmos Coin and an ERC20 token address.



#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct EvmosPeriodErc20PeriodV1PeriodTokenPair {
    #[serde(rename = "erc20Address", skip_serializing_if = "Option::is_none")]
    pub erc20_address: Option<String>,
    #[serde(rename = "denom", skip_serializing_if = "Option::is_none")]
    pub denom: Option<String>,
    #[serde(rename = "enabled", skip_serializing_if = "Option::is_none")]
    pub enabled: Option<bool>,
    #[serde(rename = "contractOwner", skip_serializing_if = "Option::is_none")]
    pub contract_owner: Option<crate::models::EvmosPeriodErc20PeriodV1PeriodOwner>,
}

impl EvmosPeriodErc20PeriodV1PeriodTokenPair {
    /// TokenPair defines an instance that records a pairing consisting of a native  Cosmos Coin and an ERC20 token address.
    pub fn new() -> EvmosPeriodErc20PeriodV1PeriodTokenPair {
        EvmosPeriodErc20PeriodV1PeriodTokenPair {
            erc20_address: None,
            denom: None,
            enabled: None,
            contract_owner: None,
        }
    }
}


