/*
 * cosmos/app/v1alpha1/module.proto
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 * Generated by: https://openapi-generator.tech
 */

/// CosmosPeriodBasePeriodTendermintPeriodV1beta1PeriodProofOp : ProofOp defines an operation used for calculating Merkle root. The data could be arbitrary format, providing nessecary data for example neighbouring node hash.  Note: This type is a duplicate of the ProofOp proto type defined in Tendermint.



#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct CosmosPeriodBasePeriodTendermintPeriodV1beta1PeriodProofOp {
    #[serde(rename = "type", skip_serializing_if = "Option::is_none")]
    pub r#type: Option<String>,
    #[serde(rename = "key", skip_serializing_if = "Option::is_none")]
    pub key: Option<String>,
    #[serde(rename = "data", skip_serializing_if = "Option::is_none")]
    pub data: Option<String>,
}

impl CosmosPeriodBasePeriodTendermintPeriodV1beta1PeriodProofOp {
    /// ProofOp defines an operation used for calculating Merkle root. The data could be arbitrary format, providing nessecary data for example neighbouring node hash.  Note: This type is a duplicate of the ProofOp proto type defined in Tendermint.
    pub fn new() -> CosmosPeriodBasePeriodTendermintPeriodV1beta1PeriodProofOp {
        CosmosPeriodBasePeriodTendermintPeriodV1beta1PeriodProofOp {
            r#type: None,
            key: None,
            data: None,
        }
    }
}


