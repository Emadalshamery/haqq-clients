/*
 * cosmos/app/v1alpha1/module.proto
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 * Generated by: https://openapi-generator.tech
 */

/// CosmosPeriodStakingPeriodV1beta1PeriodValidator : Validator defines a validator, together with the total amount of the Validator's bond shares and their exchange rate to coins. Slashing results in a decrease in the exchange rate, allowing correct calculation of future undelegations without iterating over delegators. When coins are delegated to this validator, the validator is credited with a delegation whose number of bond shares is based on the amount of coins delegated divided by the current exchange rate. Voting power can be calculated as total bonded shares multiplied by exchange rate.



#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct CosmosPeriodStakingPeriodV1beta1PeriodValidator {
    /// operator_address defines the address of the validator's operator; bech encoded in JSON.
    #[serde(rename = "operatorAddress", skip_serializing_if = "Option::is_none")]
    pub operator_address: Option<String>,
    #[serde(rename = "consensusPubkey", skip_serializing_if = "Option::is_none")]
    pub consensus_pubkey: Option<crate::models::GooglePeriodProtobufPeriodAny>,
    /// jailed defined whether the validator has been jailed from bonded status or not.
    #[serde(rename = "jailed", skip_serializing_if = "Option::is_none")]
    pub jailed: Option<bool>,
    #[serde(rename = "status", skip_serializing_if = "Option::is_none")]
    pub status: Option<crate::models::CosmosPeriodStakingPeriodV1beta1PeriodBondStatus>,
    /// tokens define the delegated tokens (incl. self-delegation).
    #[serde(rename = "tokens", skip_serializing_if = "Option::is_none")]
    pub tokens: Option<String>,
    /// delegator_shares defines total shares issued to a validator's delegators.
    #[serde(rename = "delegatorShares", skip_serializing_if = "Option::is_none")]
    pub delegator_shares: Option<String>,
    #[serde(rename = "description", skip_serializing_if = "Option::is_none")]
    pub description: Option<Box<crate::models::CosmosPeriodStakingPeriodV1beta1PeriodDescription>>,
    /// unbonding_height defines, if unbonding, the height at which this validator has begun unbonding.
    #[serde(rename = "unbondingHeight", skip_serializing_if = "Option::is_none")]
    pub unbonding_height: Option<String>,
    /// unbonding_time defines, if unbonding, the min time for the validator to complete unbonding.
    #[serde(rename = "unbondingTime", skip_serializing_if = "Option::is_none")]
    pub unbonding_time: Option<String>,
    #[serde(rename = "commission", skip_serializing_if = "Option::is_none")]
    pub commission: Option<Box<crate::models::CosmosPeriodStakingPeriodV1beta1PeriodCommission>>,
    /// min_self_delegation is the validator's self declared minimum self delegation.  Since: cosmos-sdk 0.46
    #[serde(rename = "minSelfDelegation", skip_serializing_if = "Option::is_none")]
    pub min_self_delegation: Option<String>,
}

impl CosmosPeriodStakingPeriodV1beta1PeriodValidator {
    /// Validator defines a validator, together with the total amount of the Validator's bond shares and their exchange rate to coins. Slashing results in a decrease in the exchange rate, allowing correct calculation of future undelegations without iterating over delegators. When coins are delegated to this validator, the validator is credited with a delegation whose number of bond shares is based on the amount of coins delegated divided by the current exchange rate. Voting power can be calculated as total bonded shares multiplied by exchange rate.
    pub fn new() -> CosmosPeriodStakingPeriodV1beta1PeriodValidator {
        CosmosPeriodStakingPeriodV1beta1PeriodValidator {
            operator_address: None,
            consensus_pubkey: None,
            jailed: None,
            status: None,
            tokens: None,
            delegator_shares: None,
            description: None,
            unbonding_height: None,
            unbonding_time: None,
            commission: None,
            min_self_delegation: None,
        }
    }
}


