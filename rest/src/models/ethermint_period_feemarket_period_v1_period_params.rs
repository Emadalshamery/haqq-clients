/*
 * cosmos/app/v1alpha1/module.proto
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct EthermintPeriodFeemarketPeriodV1PeriodParams {
    #[serde(rename = "noBaseFee", skip_serializing_if = "Option::is_none")]
    pub no_base_fee: Option<bool>,
    /// base_fee_change_denominator bounds the amount the base fee can change between blocks.
    #[serde(rename = "baseFeeChangeDenominator", skip_serializing_if = "Option::is_none")]
    pub base_fee_change_denominator: Option<i64>,
    /// elasticity_multiplier bounds the maximum gas limit an EIP-1559 block may have.
    #[serde(rename = "elasticityMultiplier", skip_serializing_if = "Option::is_none")]
    pub elasticity_multiplier: Option<i64>,
    /// enable_height defines at which block height the base fee calculation is enabled.
    #[serde(rename = "enableHeight", skip_serializing_if = "Option::is_none")]
    pub enable_height: Option<String>,
    /// base_fee for EIP-1559 blocks.
    #[serde(rename = "baseFee", skip_serializing_if = "Option::is_none")]
    pub base_fee: Option<String>,
    #[serde(rename = "minGasPrice", skip_serializing_if = "Option::is_none")]
    pub min_gas_price: Option<String>,
    #[serde(rename = "minGasMultiplier", skip_serializing_if = "Option::is_none")]
    pub min_gas_multiplier: Option<String>,
}

impl EthermintPeriodFeemarketPeriodV1PeriodParams {
    pub fn new() -> EthermintPeriodFeemarketPeriodV1PeriodParams {
        EthermintPeriodFeemarketPeriodV1PeriodParams {
            no_base_fee: None,
            base_fee_change_denominator: None,
            elasticity_multiplier: None,
            enable_height: None,
            base_fee: None,
            min_gas_price: None,
            min_gas_multiplier: None,
        }
    }
}


